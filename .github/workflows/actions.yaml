name: Run Files Sequentially on Windows

on:
  workflow_dispatch: # Allows manual triggering of the workflow
  schedule:
    - cron: "0 * * * *" # Runs every 1 hour

jobs:
  run-files:
    runs-on: windows-latest # Use a Windows runner

    steps:
    # Step 1: Check out the repository
    - name: Check out repository
      uses: actions/checkout@v3

    # Step 2: Set up Python environment
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13' # Specify your Python version

    # Step 3: Turn off firewall (Windows-specific)
    - name: Disable Windows Firewall
      run: |
        netsh advfirewall set allprofiles state off
        echo "Firewall has been disabled."

    # Step 4: Install required Python libraries
    - name: Install Python libraries
      run: |
        python -m pip install --upgrade pip
        pip install selenium requests urllib3 regex

    # Step 5: Install Google Chrome and ChromeDriver
    - name: Install Google Chrome
      run: |
        # Download Google Chrome for Windows
        curl -LO "https://dl.google.com/chrome/install/standalone/ChromeSetup.exe"

        # Install Google Chrome silently
        Start-Process -FilePath "./ChromeSetup.exe" -ArgumentList "/silent", "/install" -Wait


    - name: Install ChromeDriver
      run: |
        # Get the installed Chrome version
        $chrome_version = (Get-Command "C:\Program Files (x86)\Google\Chrome\Application\chrome.exe").FileVersion
        echo "Installed Chrome version: $chrome_version"

        # Download the matching ChromeDriver
        Invoke-WebRequest -Uri "https://chromedriver.storage.googleapis.com/chrome-for-testing-public/$chrome_version/chromedriver_win32.zip" -OutFile chromedriver_win32.zip
        Expand-Archive chromedriver_win32.zip -DestinationPath C:\chromedriver
        set PATH=%PATH%;C:\chromedriver

    # Step 6: Verify ChromeDriver installation
    - name: Verify ChromeDriver installation
      run: |
        chromedriver --version
        "C:\Program Files (x86)\Google\Chrome\Application\chrome.exe" --version

    # Step 7: Run the first script
    - name: Extract port number for BG TV
      run: |
        echo "Running first file..."
        python get_bg_portnum.py

    # Step 8: Wait for a brief pause
    - name: Wait briefly
      run: timeout 3

    # Step 9: Run the second script
    - name: Extract tokens for BG TV and renew playlist
      run: |
        echo "Running second file..."
        python make_playlist.py

    # Step 10: Commit and push changes
    - name: Configure Git
      run: |
        git config --global user.name "mmmw"
        git config --global user.email "mmmw@abv.bg"

    - name: Commit changes
      run: |
        git add -A
        git commit -m "Automated update: Ran scripts and updated files" || echo "No changes to commit"

    # Step 11: Push changes
    - name: Push changes
      uses: ad-m/github-push-action@v0.6.0
      with:
        github_token: ${{ secrets.SOME_SECRET }}
        branch: main
