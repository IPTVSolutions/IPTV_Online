name: Run Files Sequentially

on:
  workflow_dispatch: # Allows manual triggering of the workflow
  schedule:
    - cron: "0 * * * *" # Runs every 1 hour

jobs:
  run-files:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the repository
    - name: Check out repository
      uses: actions/checkout@v3

    # Step 2: Set up Python environment
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13' # Specify your Python version, e.g., '3.9'

    # Step 3: Turn off firewall
    - name: Disable Firewall
      run: |
        sudo ufw disable
        echo "Firewall has been disabled."

    - name: Set permissions
      run: chmod +x *.py

    # Step 3: Install required Python libraries
    - name: Install Python libraries
      run: |
        python -m pip install --upgrade pip
        pip install selenium
        pip install requests
        pip install urllib3
        pip install regex

    # Step 4: Install Google Chrome and ChromeDriver
    - name: Install Google Chrome
      run: |
        # Install required dependencies
        sudo apt-get update
        sudo apt-get install -y wget unzip curl libx11-dev libx11-xcb1 libxcomposite1 libxrandr2 libgbm1 libasound2

        # Install Google Chrome
        wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
        sudo dpkg -i google-chrome-stable_current_amd64.deb || sudo apt-get install -y -f

    # Step 5: Install ChromeDriver
    - name: Install ChromeDriver
      run: |

        # Get the full version of Chrome (including major, minor, and patch versions)
        CHROME_VERSION=$(google-chrome --version | grep -oP '\d+\.\d+\.\d+\.\d+')

        # Log the Chrome version for debugging purposes
        echo "Installed Chrome version: $CHROME_VERSION"

        # Download the correct version of ChromeDriver and save it as chromedriver_linux64.zip
        wget "https://storage.googleapis.com/chrome-for-testing-public/$CHROME_VERSION/linux64/chrome-linux64.zip" -O chromedriver_linux64.zip

        # Check if the file is downloaded correctly (optional debugging step)
        ls -l chromedriver_linux64.zip

        # Unzip the downloaded ChromeDriver ZIP file
        unzip chromedriver_linux64.zip -d chromedriver

        # List the contents of the extracted folder for debugging
        ls -l chromedriver

        # Move the chromedriver binary to the /usr/local/bin directory and set executable permissions
        sudo mv chromedriver /usr/local/bin/
        sudo chmod +x /usr/local/bin/chromedriver

    # Step 6: Verify ChromeDriver installation
    - name: Verify ChromeDriver installation
      run: |
        chromedriver --version
        google-chrome --version

    # Step 7: Run the first script with headless mode options for Chrome
    - name: Extract port number for BG TV
      run: |
        echo "Running first file..."
        python get_bg_portnum.py

    # Step 8: Wait for a brief pause
    - name: Wait briefly
      run: sleep 3 # Pause for 1 minute

    # Step 9: Run the second script
    - name: Extract tokens for BG TV and renew playlist
      run: |
        PYTHONDEBUG=1 python make_playlist.py

    # Step 10: Commit and push changes
    - name: Configure Git
      run: |
        git config --global user.name "mmmw"
        git config --global user.email "mmmw@abv.bg"

    - name: Commit changes
      run: | 
        git add -A :!chromedriver_linux64.zip :!google-chrome-stable_current_amd64.deb 
        git commit -m "Automated update: Ran scripts and updated files" || echo "No changes to commit"
    
    # Step 12: Push changes
    - name: Push changes
      uses: ad-m/github-push-action@v0.6.0
      with:
        github_token: ${{ secrets.SOME_SECRET }}
        branch: main

