name: Run Files Sequentially on Windows

on:
  workflow_dispatch: # Allows manual triggering of the workflow
  schedule:
    - cron: "0 * * * *" # Runs every hour

jobs:
  run-files:
    runs-on: windows-latest # Use a Windows runner

    steps:
      # Step 1: Print environment details
      - name: Print Environment Variables
        run: |
          echo ImageOS: ${{ runner.os }}
          echo Version Details:
          systeminfo

      # Step 2: Check out the repository
      - name: Check out repository
        uses: actions/checkout@v3

      # Step 3: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11' # Specify a stable Python version

      # Step 4: Install required Python libraries
      - name: Install Python libraries
        run: |
          python -m pip install --upgrade pip
          pip install selenium requests urllib3 regex

      - name: Download Google Chrome installer 
        run: |
           $installerPath = "$env:TEMP\chrome_installer.exe" 
           Invoke-WebRequest -Uri "https://dl.google.com/chrome/install/latest/chrome_installer.exe" -OutFile $installerPath 
      
      - name: Install Google Chrome
        run: |
           Start-Process -FilePath "$env:TEMP\chrome_installer.exe" -ArgumentList "/silent /install" -Wait 

      # Step 7: Install ChromeDriver
      - name: Install ChromeDriver
        run: |
          $chrome_version = wmic datafile where name="C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe" get Version /value
          $chrome_version = $chrome_version -replace "Version", ""
          $chrome_version = $chrome_version.Trim()
          echo "Installed Chrome version: $chrome_version"

          Invoke-WebRequest -Uri "https://storage.googleapis.com/chrome-for-testing-public/$driver_version/win64/chrome-win64.zip" -OutFile chrome-win64.zip
          Expand-Archive -Path chrome-win64.zip -DestinationPath C:\chromedriver
          [System.Environment]::SetEnvironmentVariable('PATH', $env:PATH + ';C:\chromedriver', [System.EnvironmentVariableTarget]::Machine)

      # Step 8: Verify ChromeDriver installation
      - name: Verify ChromeDriver installation
        run: |
          chromedriver --version
          "C:\Program Files (x86)\Google\Chrome\Application\chrome.exe" --version

      # Step 9: Run the first script
      - name: Extract port number for BG TV
        run: |
          echo "Running first file..."
          python get_bg_portnum.py

      # Step 10: Wait briefly
      - name: Wait briefly
        run: timeout 3

      # Step 11: Run the second script
      - name: Extract tokens for BG TV and renew playlist
        run: |
          echo "Running second file..."
          python make_playlist.py

      # Step 12: Configure Git
      - name: Configure Git
        run: |
          git config --global user.name "mmmw"
          git config --global user.email "mmmw@abv.bg"

      # Step 13: Commit changes
      - name: Commit changes
        run: |
          git add -A
          git commit -m "Automated update: Ran scripts and updated files" || echo "No changes to commit"

      # Step 14: Push changes
      - name: Push changes
        run: |
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
