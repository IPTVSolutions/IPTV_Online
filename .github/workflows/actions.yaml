name: Run Files Sequentially on Windows

on:
  workflow_dispatch: # Allows manual triggering of the workflow
  schedule:
    - cron: "0 * * * *" # Runs every hour

jobs:
  run-files:
    runs-on: windows-latest # Use a Windows runner

    steps:
      # Step 1: Print environment details
      - name: Print Environment Variables
        run: |
          echo ImageOS: ${{ runner.os }}
          echo Version Details:
          systeminfo

      # Step 2: Check out the repository
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Download Google Chrome installer 
        run: |
           $installerPath = "$env:TEMP\chrome_installer.exe" 
           Invoke-WebRequest -Uri "https://dl.google.com/chrome/install/latest/chrome_installer.exe" -OutFile $installerPath 
      
      - name: Install Google Chrome
        run: |
           Start-Process -FilePath "$env:TEMP\chrome_installer.exe" -ArgumentList "/silent /install" -Wait 

      - name: Get Chrome Version
        run: |
          $chromePath = "C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe"
          if (!(Test-Path $chromePath)) {
            $chromePath = "C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe"
          }
          if (Test-Path $chromePath) {
            # Get Chrome version
            $chrome_version = wmic datafile where "name='$chromePath'" get Version /value
            $chrome_version = $chrome_version -replace "Version=", ""
            
            # Remove all spaces from the version string
            $chrome_version = $chrome_version -replace '\s+', ''  # Removes all spaces, including before and after

            # Confirm cleaned version string
            echo "Installed Chrome version (cleaned): '$chrome_version'"

            # Construct the full URL with the cleaned version string
            $driver_url = "https://storage.googleapis.com/chrome-for-testing-public/$chrome_version/win64/chromedriver-win64.zip"

            # Debugging step: Show the URL for verification
            echo "Attempting to download ChromeDriver from: $driver_url"
            
            # Download ChromeDriver
            Invoke-WebRequest -Uri $driver_url -OutFile chromedriver-win64.zip

            # Extract and configure ChromeDriver
            Expand-Archive -Path chromedriver-win64.zip -DestinationPath C:\chromedriver
            [System.Environment]::SetEnvironmentVariable('PATH', $env:PATH + ';C:\chromedriver', [System.EnvironmentVariableTarget]::Machine)
            echo "ChromeDriver installed and PATH updated."
          } else {
            echo "Chrome is not installed."
            exit 1
          }



