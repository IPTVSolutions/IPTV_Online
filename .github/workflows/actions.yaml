name: Run Files Sequentially on Windows

on:
  workflow_dispatch: # Allows manual triggering of the workflow
  schedule:
    - cron: "0 * * * *" # Runs every hour

jobs:
  run-files:
    runs-on: windows-latest # Use a Windows runner

    steps:
      # Step 1: Print environment details
      - name: Print Environment Variables
        run: |
          echo ImageOS: ${{ runner.os }}
          echo Version Details:
          systeminfo

      # Step 2: Check out the repository
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Download Google Chrome installer 
        run: |
           $installerPath = "$env:TEMP\chrome_installer.exe" 
           Invoke-WebRequest -Uri "https://dl.google.com/chrome/install/latest/chrome_installer.exe" -OutFile $installerPath 
      
      - name: Install Google Chrome
        run: |
           Start-Process -FilePath "$env:TEMP\chrome_installer.exe" -ArgumentList "/silent /install" -Wait 

      - name: Get Chrome Version and Install ChromeDriver
        run: |
          # Locate Chrome installation path
          $chromePath = "C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe"
          if (!(Test-Path $chromePath)) {
            $chromePath = "C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe"
          }

          # Check if Chrome is installed
          if (Test-Path $chromePath) {
            # Get Chrome version
            $chrome_version = wmic datafile where "name='$chromePath'" get Version /value
            $chrome_version = $chrome_version -replace "Version=", ""
            $chrome_version = $chrome_version.Trim()
            Write-Output "Installed Chrome version: $chrome_version"

            # Extract the major version of Chrome
            $major_version = $chrome_version.Split('.')[0]
            Write-Output "Chrome major version: $major_version"

            # Fetch the appropriate ChromeDriver version
            $url = "https://googlechromelabs.github.io/chrome-for-testing/latest-patch-versions-per-build-with-downloads.json"
            $json = Invoke-WebRequest -Uri $url | ConvertFrom-Json
            $driver_url = $json.builds.$major_version.downloads.chromedriver[0].url

            # Download and extract ChromeDriver
            Write-Output "Downloading ChromeDriver from: $driver_url"
            Invoke-WebRequest -Uri $driver_url -OutFile chrome-win64.zip
            Expand-Archive -Path chrome-win64.zip -DestinationPath C:\chromedriver
            Write-Output "ChromeDriver installed to C:\chromedriver"

            # Add ChromeDriver to PATH
            $newPath = "C:\chromedriver;" + [System.Environment]::GetEnvironmentVariable("PATH", [System.EnvironmentVariableTarget]::Machine)
            [System.Environment]::SetEnvironmentVariable("PATH", $newPath, [System.EnvironmentVariableTarget]::Machine)
            Write-Output "Updated PATH environment variable with ChromeDriver."
          } else {
            Write-Output "Chrome is not installed."
            exit 1
          }

